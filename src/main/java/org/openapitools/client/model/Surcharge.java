/*
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ModelConfiguration;

/**
 * Surcharge
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-30T16:56:39.721579+02:00[Europe/Amsterdam]")
public class Surcharge {
  public static final String SERIALIZED_NAME_ASK_CONFIRMATION = "askConfirmation";
  @SerializedName(SERIALIZED_NAME_ASK_CONFIRMATION)
  private Boolean askConfirmation;

  public static final String SERIALIZED_NAME_CONFIGURATIONS = "configurations";
  @SerializedName(SERIALIZED_NAME_CONFIGURATIONS)
  private List<ModelConfiguration> configurations = null;

  public Surcharge() { 
  }

  public Surcharge askConfirmation(Boolean askConfirmation) {
    
    this.askConfirmation = askConfirmation;
    return this;
  }

   /**
   * Show the surcharge details on the terminal, so the shopper can confirm.
   * @return askConfirmation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Show the surcharge details on the terminal, so the shopper can confirm.")

  public Boolean getAskConfirmation() {
    return askConfirmation;
  }


  public void setAskConfirmation(Boolean askConfirmation) {
    this.askConfirmation = askConfirmation;
  }


  public Surcharge configurations(List<ModelConfiguration> configurations) {
    
    this.configurations = configurations;
    return this;
  }

  public Surcharge addConfigurationsItem(ModelConfiguration configurationsItem) {
    if (this.configurations == null) {
      this.configurations = new ArrayList<ModelConfiguration>();
    }
    this.configurations.add(configurationsItem);
    return this;
  }

   /**
   * Surcharge fees or percentages for specific payment methods, funding sources (credit or debit), and currencies.
   * @return configurations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Surcharge fees or percentages for specific payment methods, funding sources (credit or debit), and currencies.")

  public List<ModelConfiguration> getConfigurations() {
    return configurations;
  }


  public void setConfigurations(List<ModelConfiguration> configurations) {
    this.configurations = configurations;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Surcharge surcharge = (Surcharge) o;
    return Objects.equals(this.askConfirmation, surcharge.askConfirmation) &&
        Objects.equals(this.configurations, surcharge.configurations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(askConfirmation, configurations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Surcharge {\n");
    sb.append("    askConfirmation: ").append(toIndentedString(askConfirmation)).append("\n");
    sb.append("    configurations: ").append(toIndentedString(configurations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


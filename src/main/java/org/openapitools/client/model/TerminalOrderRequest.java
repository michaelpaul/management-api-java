/*
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OrderItem;

/**
 * TerminalOrderRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-30T16:56:39.721579+02:00[Europe/Amsterdam]")
public class TerminalOrderRequest {
  public static final String SERIALIZED_NAME_BILLING_ENTITY_ID = "billingEntityId";
  @SerializedName(SERIALIZED_NAME_BILLING_ENTITY_ID)
  private String billingEntityId;

  public static final String SERIALIZED_NAME_CUSTOMER_ORDER_REFERENCE = "customerOrderReference";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ORDER_REFERENCE)
  private String customerOrderReference;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<OrderItem> items = null;

  public static final String SERIALIZED_NAME_SHIPPING_LOCATION_ID = "shippingLocationId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LOCATION_ID)
  private String shippingLocationId;

  public static final String SERIALIZED_NAME_TAX_ID = "taxId";
  @SerializedName(SERIALIZED_NAME_TAX_ID)
  private String taxId;

  public TerminalOrderRequest() { 
  }

  public TerminalOrderRequest billingEntityId(String billingEntityId) {
    
    this.billingEntityId = billingEntityId;
    return this;
  }

   /**
   * The identification of the billing entity to use for the order.
   * @return billingEntityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identification of the billing entity to use for the order.")

  public String getBillingEntityId() {
    return billingEntityId;
  }


  public void setBillingEntityId(String billingEntityId) {
    this.billingEntityId = billingEntityId;
  }


  public TerminalOrderRequest customerOrderReference(String customerOrderReference) {
    
    this.customerOrderReference = customerOrderReference;
    return this;
  }

   /**
   * The merchant-defined purchase order reference.
   * @return customerOrderReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The merchant-defined purchase order reference.")

  public String getCustomerOrderReference() {
    return customerOrderReference;
  }


  public void setCustomerOrderReference(String customerOrderReference) {
    this.customerOrderReference = customerOrderReference;
  }


  public TerminalOrderRequest items(List<OrderItem> items) {
    
    this.items = items;
    return this;
  }

  public TerminalOrderRequest addItemsItem(OrderItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<OrderItem>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * The products included in the order.
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The products included in the order.")

  public List<OrderItem> getItems() {
    return items;
  }


  public void setItems(List<OrderItem> items) {
    this.items = items;
  }


  public TerminalOrderRequest shippingLocationId(String shippingLocationId) {
    
    this.shippingLocationId = shippingLocationId;
    return this;
  }

   /**
   * The identification of the shipping location to use for the order.
   * @return shippingLocationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identification of the shipping location to use for the order.")

  public String getShippingLocationId() {
    return shippingLocationId;
  }


  public void setShippingLocationId(String shippingLocationId) {
    this.shippingLocationId = shippingLocationId;
  }


  public TerminalOrderRequest taxId(String taxId) {
    
    this.taxId = taxId;
    return this;
  }

   /**
   * The tax number of the billing entity.
   * @return taxId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tax number of the billing entity.")

  public String getTaxId() {
    return taxId;
  }


  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerminalOrderRequest terminalOrderRequest = (TerminalOrderRequest) o;
    return Objects.equals(this.billingEntityId, terminalOrderRequest.billingEntityId) &&
        Objects.equals(this.customerOrderReference, terminalOrderRequest.customerOrderReference) &&
        Objects.equals(this.items, terminalOrderRequest.items) &&
        Objects.equals(this.shippingLocationId, terminalOrderRequest.shippingLocationId) &&
        Objects.equals(this.taxId, terminalOrderRequest.taxId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingEntityId, customerOrderReference, items, shippingLocationId, taxId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerminalOrderRequest {\n");
    sb.append("    billingEntityId: ").append(toIndentedString(billingEntityId)).append("\n");
    sb.append("    customerOrderReference: ").append(toIndentedString(customerOrderReference)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    shippingLocationId: ").append(toIndentedString(shippingLocationId)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


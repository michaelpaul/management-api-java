/*
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AndroidApp
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-30T16:56:39.721579+02:00[Europe/Amsterdam]")
public class AndroidApp {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_PACKAGE_NAME = "packageName";
  @SerializedName(SERIALIZED_NAME_PACKAGE_NAME)
  private String packageName;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_VERSION_CODE = "versionCode";
  @SerializedName(SERIALIZED_NAME_VERSION_CODE)
  private Integer versionCode;

  public static final String SERIALIZED_NAME_VERSION_NAME = "versionName";
  @SerializedName(SERIALIZED_NAME_VERSION_NAME)
  private String versionName;

  public AndroidApp() { 
  }

  public AndroidApp description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description that was provided when uploading the app. The description is not shown on the terminal.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description that was provided when uploading the app. The description is not shown on the terminal.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public AndroidApp id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the app.
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The unique identifier of the app.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public AndroidApp label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * The app name that is shown on the terminal.
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The app name that is shown on the terminal.")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  public AndroidApp packageName(String packageName) {
    
    this.packageName = packageName;
    return this;
  }

   /**
   * The package name of the app.
   * @return packageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The package name of the app.")

  public String getPackageName() {
    return packageName;
  }


  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }


  public AndroidApp status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The status of the app. Possible values:  * &#x60;processing&#x60;: The app is being signed and converted to a format that the terminal can handle. * &#x60;error&#x60;: Something went wrong. Check that the app matches the [requirements](https://docs.adyen.com/point-of-sale/android-terminals/app-requirements). * &#x60;invalid&#x60;: There is something wrong with the APK file of the app. * &#x60;ready&#x60;: The app has been signed and converted. * &#x60;archived&#x60;: The app is no longer available.
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The status of the app. Possible values:  * `processing`: The app is being signed and converted to a format that the terminal can handle. * `error`: Something went wrong. Check that the app matches the [requirements](https://docs.adyen.com/point-of-sale/android-terminals/app-requirements). * `invalid`: There is something wrong with the APK file of the app. * `ready`: The app has been signed and converted. * `archived`: The app is no longer available.")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public AndroidApp versionCode(Integer versionCode) {
    
    this.versionCode = versionCode;
    return this;
  }

   /**
   * The internal version number of the app.
   * @return versionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The internal version number of the app.")

  public Integer getVersionCode() {
    return versionCode;
  }


  public void setVersionCode(Integer versionCode) {
    this.versionCode = versionCode;
  }


  public AndroidApp versionName(String versionName) {
    
    this.versionName = versionName;
    return this;
  }

   /**
   * The app version number that is shown on the terminal.
   * @return versionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The app version number that is shown on the terminal.")

  public String getVersionName() {
    return versionName;
  }


  public void setVersionName(String versionName) {
    this.versionName = versionName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AndroidApp androidApp = (AndroidApp) o;
    return Objects.equals(this.description, androidApp.description) &&
        Objects.equals(this.id, androidApp.id) &&
        Objects.equals(this.label, androidApp.label) &&
        Objects.equals(this.packageName, androidApp.packageName) &&
        Objects.equals(this.status, androidApp.status) &&
        Objects.equals(this.versionCode, androidApp.versionCode) &&
        Objects.equals(this.versionName, androidApp.versionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, label, packageName, status, versionCode, versionName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AndroidApp {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    versionCode: ").append(toIndentedString(versionCode)).append("\n");
    sb.append("    versionName: ").append(toIndentedString(versionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Management API
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```
 *
 * The version of the OpenAPI document: 1
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CardholderReceipt;
import org.openapitools.client.model.Connectivity;
import org.openapitools.client.model.Gratuity;
import org.openapitools.client.model.Hardware;
import org.openapitools.client.model.Nexo;
import org.openapitools.client.model.OfflineProcessing;
import org.openapitools.client.model.Opi;
import org.openapitools.client.model.ReceiptOptions;
import org.openapitools.client.model.ReceiptPrinting;
import org.openapitools.client.model.Signature;
import org.openapitools.client.model.Surcharge;
import org.openapitools.client.model.Timeouts;
import org.openapitools.client.model.WifiProfiles;

/**
 * TerminalSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-30T16:56:39.721579+02:00[Europe/Amsterdam]")
public class TerminalSettings {
  public static final String SERIALIZED_NAME_CARDHOLDER_RECEIPT = "cardholderReceipt";
  @SerializedName(SERIALIZED_NAME_CARDHOLDER_RECEIPT)
  private CardholderReceipt cardholderReceipt;

  public static final String SERIALIZED_NAME_CONNECTIVITY = "connectivity";
  @SerializedName(SERIALIZED_NAME_CONNECTIVITY)
  private Connectivity connectivity;

  public static final String SERIALIZED_NAME_GRATUITIES = "gratuities";
  @SerializedName(SERIALIZED_NAME_GRATUITIES)
  private List<Gratuity> gratuities = null;

  public static final String SERIALIZED_NAME_HARDWARE = "hardware";
  @SerializedName(SERIALIZED_NAME_HARDWARE)
  private Hardware hardware;

  public static final String SERIALIZED_NAME_NEXO = "nexo";
  @SerializedName(SERIALIZED_NAME_NEXO)
  private Nexo nexo;

  public static final String SERIALIZED_NAME_OFFLINE_PROCESSING = "offlineProcessing";
  @SerializedName(SERIALIZED_NAME_OFFLINE_PROCESSING)
  private OfflineProcessing offlineProcessing;

  public static final String SERIALIZED_NAME_OPI = "opi";
  @SerializedName(SERIALIZED_NAME_OPI)
  private Opi opi;

  public static final String SERIALIZED_NAME_RECEIPT_OPTIONS = "receiptOptions";
  @SerializedName(SERIALIZED_NAME_RECEIPT_OPTIONS)
  private ReceiptOptions receiptOptions;

  public static final String SERIALIZED_NAME_RECEIPT_PRINTING = "receiptPrinting";
  @SerializedName(SERIALIZED_NAME_RECEIPT_PRINTING)
  private ReceiptPrinting receiptPrinting;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private Signature signature;

  public static final String SERIALIZED_NAME_SURCHARGE = "surcharge";
  @SerializedName(SERIALIZED_NAME_SURCHARGE)
  private Surcharge surcharge;

  public static final String SERIALIZED_NAME_TIMEOUTS = "timeouts";
  @SerializedName(SERIALIZED_NAME_TIMEOUTS)
  private Timeouts timeouts;

  public static final String SERIALIZED_NAME_WIFI_PROFILES = "wifiProfiles";
  @SerializedName(SERIALIZED_NAME_WIFI_PROFILES)
  private WifiProfiles wifiProfiles;

  public TerminalSettings() { 
  }

  public TerminalSettings cardholderReceipt(CardholderReceipt cardholderReceipt) {
    
    this.cardholderReceipt = cardholderReceipt;
    return this;
  }

   /**
   * Get cardholderReceipt
   * @return cardholderReceipt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CardholderReceipt getCardholderReceipt() {
    return cardholderReceipt;
  }


  public void setCardholderReceipt(CardholderReceipt cardholderReceipt) {
    this.cardholderReceipt = cardholderReceipt;
  }


  public TerminalSettings connectivity(Connectivity connectivity) {
    
    this.connectivity = connectivity;
    return this;
  }

   /**
   * Get connectivity
   * @return connectivity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Connectivity getConnectivity() {
    return connectivity;
  }


  public void setConnectivity(Connectivity connectivity) {
    this.connectivity = connectivity;
  }


  public TerminalSettings gratuities(List<Gratuity> gratuities) {
    
    this.gratuities = gratuities;
    return this;
  }

  public TerminalSettings addGratuitiesItem(Gratuity gratuitiesItem) {
    if (this.gratuities == null) {
      this.gratuities = new ArrayList<Gratuity>();
    }
    this.gratuities.add(gratuitiesItem);
    return this;
  }

   /**
   * Settings for tipping with or without predefined options to choose from. The maximum number of predefined options is four, or three plus the option to enter a custom tip.
   * @return gratuities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Settings for tipping with or without predefined options to choose from. The maximum number of predefined options is four, or three plus the option to enter a custom tip.")

  public List<Gratuity> getGratuities() {
    return gratuities;
  }


  public void setGratuities(List<Gratuity> gratuities) {
    this.gratuities = gratuities;
  }


  public TerminalSettings hardware(Hardware hardware) {
    
    this.hardware = hardware;
    return this;
  }

   /**
   * Get hardware
   * @return hardware
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Hardware getHardware() {
    return hardware;
  }


  public void setHardware(Hardware hardware) {
    this.hardware = hardware;
  }


  public TerminalSettings nexo(Nexo nexo) {
    
    this.nexo = nexo;
    return this;
  }

   /**
   * Get nexo
   * @return nexo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Nexo getNexo() {
    return nexo;
  }


  public void setNexo(Nexo nexo) {
    this.nexo = nexo;
  }


  public TerminalSettings offlineProcessing(OfflineProcessing offlineProcessing) {
    
    this.offlineProcessing = offlineProcessing;
    return this;
  }

   /**
   * Get offlineProcessing
   * @return offlineProcessing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OfflineProcessing getOfflineProcessing() {
    return offlineProcessing;
  }


  public void setOfflineProcessing(OfflineProcessing offlineProcessing) {
    this.offlineProcessing = offlineProcessing;
  }


  public TerminalSettings opi(Opi opi) {
    
    this.opi = opi;
    return this;
  }

   /**
   * Get opi
   * @return opi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Opi getOpi() {
    return opi;
  }


  public void setOpi(Opi opi) {
    this.opi = opi;
  }


  public TerminalSettings receiptOptions(ReceiptOptions receiptOptions) {
    
    this.receiptOptions = receiptOptions;
    return this;
  }

   /**
   * Get receiptOptions
   * @return receiptOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReceiptOptions getReceiptOptions() {
    return receiptOptions;
  }


  public void setReceiptOptions(ReceiptOptions receiptOptions) {
    this.receiptOptions = receiptOptions;
  }


  public TerminalSettings receiptPrinting(ReceiptPrinting receiptPrinting) {
    
    this.receiptPrinting = receiptPrinting;
    return this;
  }

   /**
   * Get receiptPrinting
   * @return receiptPrinting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReceiptPrinting getReceiptPrinting() {
    return receiptPrinting;
  }


  public void setReceiptPrinting(ReceiptPrinting receiptPrinting) {
    this.receiptPrinting = receiptPrinting;
  }


  public TerminalSettings signature(Signature signature) {
    
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Signature getSignature() {
    return signature;
  }


  public void setSignature(Signature signature) {
    this.signature = signature;
  }


  public TerminalSettings surcharge(Surcharge surcharge) {
    
    this.surcharge = surcharge;
    return this;
  }

   /**
   * Get surcharge
   * @return surcharge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Surcharge getSurcharge() {
    return surcharge;
  }


  public void setSurcharge(Surcharge surcharge) {
    this.surcharge = surcharge;
  }


  public TerminalSettings timeouts(Timeouts timeouts) {
    
    this.timeouts = timeouts;
    return this;
  }

   /**
   * Get timeouts
   * @return timeouts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Timeouts getTimeouts() {
    return timeouts;
  }


  public void setTimeouts(Timeouts timeouts) {
    this.timeouts = timeouts;
  }


  public TerminalSettings wifiProfiles(WifiProfiles wifiProfiles) {
    
    this.wifiProfiles = wifiProfiles;
    return this;
  }

   /**
   * Get wifiProfiles
   * @return wifiProfiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WifiProfiles getWifiProfiles() {
    return wifiProfiles;
  }


  public void setWifiProfiles(WifiProfiles wifiProfiles) {
    this.wifiProfiles = wifiProfiles;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerminalSettings terminalSettings = (TerminalSettings) o;
    return Objects.equals(this.cardholderReceipt, terminalSettings.cardholderReceipt) &&
        Objects.equals(this.connectivity, terminalSettings.connectivity) &&
        Objects.equals(this.gratuities, terminalSettings.gratuities) &&
        Objects.equals(this.hardware, terminalSettings.hardware) &&
        Objects.equals(this.nexo, terminalSettings.nexo) &&
        Objects.equals(this.offlineProcessing, terminalSettings.offlineProcessing) &&
        Objects.equals(this.opi, terminalSettings.opi) &&
        Objects.equals(this.receiptOptions, terminalSettings.receiptOptions) &&
        Objects.equals(this.receiptPrinting, terminalSettings.receiptPrinting) &&
        Objects.equals(this.signature, terminalSettings.signature) &&
        Objects.equals(this.surcharge, terminalSettings.surcharge) &&
        Objects.equals(this.timeouts, terminalSettings.timeouts) &&
        Objects.equals(this.wifiProfiles, terminalSettings.wifiProfiles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardholderReceipt, connectivity, gratuities, hardware, nexo, offlineProcessing, opi, receiptOptions, receiptPrinting, signature, surcharge, timeouts, wifiProfiles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerminalSettings {\n");
    sb.append("    cardholderReceipt: ").append(toIndentedString(cardholderReceipt)).append("\n");
    sb.append("    connectivity: ").append(toIndentedString(connectivity)).append("\n");
    sb.append("    gratuities: ").append(toIndentedString(gratuities)).append("\n");
    sb.append("    hardware: ").append(toIndentedString(hardware)).append("\n");
    sb.append("    nexo: ").append(toIndentedString(nexo)).append("\n");
    sb.append("    offlineProcessing: ").append(toIndentedString(offlineProcessing)).append("\n");
    sb.append("    opi: ").append(toIndentedString(opi)).append("\n");
    sb.append("    receiptOptions: ").append(toIndentedString(receiptOptions)).append("\n");
    sb.append("    receiptPrinting: ").append(toIndentedString(receiptPrinting)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    surcharge: ").append(toIndentedString(surcharge)).append("\n");
    sb.append("    timeouts: ").append(toIndentedString(timeouts)).append("\n");
    sb.append("    wifiProfiles: ").append(toIndentedString(wifiProfiles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

